"""
Django settings for SurfsideHaven project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/

Internationalization
https://docs.djangoproject.com/en/5.1/topics/i18n/

Static files (CSS, JavaScript, Images)
https://docs.djangoproject.com/en/5.1/howto/static-files/

Default primary key field type
https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

Password validation
https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

Database
https://docs.djangoproject.com/en/5.1/ref/settings/#databases

Quick-start development settings - unsuitable for production
See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/
"""

from pathlib import Path
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


SECRET_KEY = os.getenv('COSH_DJANGO_SECRET_HERO') # For production
# SECRET_KEY = os.getenv('SECRET_KEY', 'Uncomment for local development only') # For development


DEBUG = os.getenv('COSH_DEBUG_HERO', 'False') == 'True' # For production 
# DEBUG = True # For development


# Heroku app path
ALLOWED_HOSTS = ['surfsidehaven.herokuapp.com']

# Application definition(s)
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",

    # custom apps
    "core",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

ROOT_URLCONF = "SurfsideHaven.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]


WSGI_APPLICATION = "SurfsideHaven.wsgi.application"

# use for development
# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.postgresql",
#         # db name
#         "NAME": "surfsidehavendb",
#         # user that created the db
#         "USER": 'postgres',
#         "PASSWORD": "cos",
#         "HOST": "localhost",
#         "PORT" : "5433"
#     }
# }

# use for production
DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get('DATABASE_URL'),
        conn_max_age=600  # This optional argument sets the lifetime of a database connection in seconds.
    )
}


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Define STATIC_ROOT

# Additional static files settings if necessary
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media files settings
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"